package starter.pages;import org.junit.Assert;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class AdminPage extends BasePage {    private static final Logger logger = LoggerFactory.getLogger(AdminPage.class);    public void select_option_of_tab_on_admin_page(String option, String tab) {        String tabXpath = "//i[@class='nav-icon far fa-user']/following-sibling::p[normalize-space()='" + tab + "']";        String optionXpath = "//i[@class='nav-icon far fa-dot-circle']/following-sibling::p[normalize-space()='" + option + "']";        $(tabXpath).waitUntilClickable();        $(tabXpath).click();        $(optionXpath).waitUntilClickable();        $(optionXpath).click();        logger.info("CLicked {} option of {} tab", option, tab);    }    public void input_product_name(String productName) {        $("//input[@id='SearchProductName']").waitUntilVisible();        $("//input[@id='SearchProductName']").clear();        $("//input[@id='SearchProductName']").sendKeys(productName);        logger.info("Inputted {} into Prodcut name Textbox", productName);    }    public void select_category(String category) {        $("//select[@id='SearchCategoryId']").waitUntilClickable();        $("//select[@id='SearchCategoryId']").selectByVisibleText(category);        logger.info("Selected category is {}", category);    }    public void select_subcategories(String searchSubcategories) {        if (searchSubcategories.equals("Checked")) {            $("//input[@id='SearchIncludeSubCategories']").waitUntilClickable();            $("//input[@id='SearchIncludeSubCategories']").click();            logger.info("Checked Search Subcategories");        } else if (searchSubcategories.equals("Unchecked")) {            logger.info("Unchecked Search Subcategories");        }    }    public void select_manufacturer(String manufacturer) {        $("//select[@id='SearchManufacturerId']").waitUntilClickable();        $("//select[@id='SearchManufacturerId']").selectByVisibleText(manufacturer);        logger.info("Selected Manufacturer is {}", manufacturer);    }    public void verifyProduct(int i, String productName) {        String actual = $("(//tbody/tr[" + i + "])//td[3]").getText().trim();        Assert.assertEquals(productName, actual);    }    public void verifySKU(int i, String sku) {        String actual = $("(//tbody/tr[" + i + "])//td[4]").getText().trim();        Assert.assertEquals(sku, actual);    }    public void verifyPrice(int i, String price) {        String actual = $("(//tbody/tr[" + i + "])//td[5]").getText().trim();        Assert.assertEquals(price, actual);    }    public void verifyQuantity(int i, String stockQuantity) {        String actual = $("(//tbody/tr[" + i + "])//td[6]").getText().trim();        Assert.assertEquals(stockQuantity, actual);    }    public void verifyPublished(int i, String published) {        String actual = $("(//tbody/tr[" + i + "])//td[7]/i").getAttribute("nop-value");        Assert.assertEquals(published, actual);    }    public void click_on_search_button() {        $("//button[@id='search-products']").waitUntilClickable();        $("//button[@id='search-products']").click();        logger.info("Clicked on Search product button");        $("//div[@class='ajax-products-busy']").waitUntilNotVisible();    }    public void verifyNoResult() {        String actual = $("//td[@class='dataTables_empty']").getText().trim();        Assert.assertTrue($("//td[@class='dataTables_empty']").isDisplayed());        Assert.assertEquals("No data available in table", actual);    }    public void check_collapse_icon() {        if (getElement("//i[@class='far fa-angle-down']") != null) {            logger.info("Search area is Not displayed");            $("//div[@class='card-body']//div[@class='icon-collapse']").click();            $("//div[@class='ajax-products-busy']").waitUntilNotVisible();            logger.info("Clicked collapse icon >> Search area is displayed");        } else if (getElement("//i[@class='far fa-angle-up']") != null) {            logger.info("Search area is displayed. Ready to search!!!");        }    }    public void go_directly_with_SKU(String sku) {        $("//input[@id='GoDirectlyToSku']").waitUntilVisible();        $("//input[@id='GoDirectlyToSku']").clear();        $("//input[@id='GoDirectlyToSku']").sendKeys(sku);        $("//button[@id='go-to-product-by-sku']").click();        logger.info("go directly with sku {}", sku);    }    public void verify_navigate_to_product_detail() {        waitABit(1000);        Assert.assertEquals(getTitle(), "Edit product details / nopCommerce administration");        Assert.assertTrue($("//div[@class='card-title'][normalize-space()='Product info']").isDisplayed());        logger.info("Product detail is displayed");    }    public void verify_info_of_product(String name) {        String actual = $("//input[@id='Name']").getAttribute("value").trim();        Assert.assertEquals(name, actual);    }    public void click_button_card_a(String button) {        $("//a[normalize-space()='" + button + "']").waitUntilClickable();        $("//a[normalize-space()='" + button + "']").click();        logger.info("Clicked button use card //a {}", button);    }    public void input_email_to_create_new_customer(String email) {        $("//input[@id='Email']").waitUntilVisible();        $("//input[@id='Email']").clear();        $("//input[@id='Email']").sendKeys(email);        logger.info("Inputted Email {}", email);    }    public void input_password_to_create_new_customer(String password) {        $("//input[@id='Password']").waitUntilVisible();        $("//input[@id='Password']").clear();        $("//input[@id='Password']").sendKeys(password);        logger.info("Inputted Password {}", password);    }    public void input_firstname_to_create_new_customer(String firstName) {        $("//input[@id='FirstName']").waitUntilVisible();        $("//input[@id='FirstName']").clear();        $("//input[@id='FirstName']").sendKeys(firstName);        logger.info("Inputted FirstName {}", firstName);    }    public void input_lastname_to_create_new_customer(String lastName) {        $("//input[@id='LastName']").waitUntilVisible();        $("//input[@id='LastName']").clear();        $("//input[@id='LastName']").sendKeys(lastName);        logger.info("Inputted LastName {}", lastName);    }    public void select_gender_to_create_new_customer(String gender) {        if (gender.equals("Male")) {            $("//input[@id='Gender_Male']").waitUntilClickable();            $("//input[@id='Gender_Male']").click();            logger.info("Select gender is: {}", gender);        }        if (gender.equals("Female")) {            $("//input[@id='Gender_Female']").waitUntilClickable();            $("//input[@id='Gender_Female']").click();            logger.info("Select gender is: {}", gender);        }    }    public void input_dateOfBirth_to_create_new_customer(String dateOfBirth) {        $("//input[@id='DateOfBirth']").waitUntilVisible();        $("//input[@id='DateOfBirth']").clear();        $("//input[@id='DateOfBirth']").sendKeys(dateOfBirth);        logger.info("Inputted DateOfBirth {}", dateOfBirth);    }    public void input_company_to_create_new_customer(String companyName) {        $("//input[@id='Company']").waitUntilVisible();        $("//input[@id='Company']").clear();        $("//input[@id='Company']").sendKeys(companyName);        logger.info("Inputted Company {}", companyName);    }    public void input_customer_role_to_create_new_customer(String customerRoles) {        $("//span[@title='delete']").waitUntilClickable();        $("//span[@title='delete']").click();        $("(//div[@role='listbox'])[2]").waitUntilClickable();        $("(//div[@role='listbox'])[2]").click();        $("//li[normalize-space()='"+customerRoles+"']").waitUntilClickable();        $("//li[normalize-space()='"+customerRoles+"']").click();        logger.info("Selected customer role: {}", customerRoles);    }    public void input_comment_to_create_new_customer(String adminComment) {        $("//textarea[@id='AdminComment']").waitUntilVisible();        $("//textarea[@id='AdminComment']").clear();        $("//textarea[@id='AdminComment']").sendKeys(adminComment);        logger.info("Inputted Admin comment {}", adminComment);    }    public void click_button_card_button(String button) {        $("//button[normalize-space()='" + button + "']").waitUntilClickable();        $("//button[normalize-space()='" + button + "']").click();        logger.info("Clicked on button {}", button);    }    public void verify_message_displayed_in_admin_page(String message) {        $("//div[@class='alert alert-success alert-dismissable']").waitUntilVisible();        String actual = $("//div[@class='alert alert-success alert-dismissable']").getText().trim().replace("Ã—\n","");        Assert.assertEquals(message, actual);    }    public void verify_email_of_customer(String email) {        String actual = $("//input[@id='Email']").getAttribute("value").trim();        Assert.assertEquals(email, actual);    }    public void verify_firstname_of_customer(String firstName) {        String actual = $("//input[@id='FirstName']").getAttribute("value").trim();        Assert.assertEquals(firstName, actual);    }    public void verify_last_name_of_customer(String lastName) {        String actual = $("//input[@id='LastName']").getAttribute("value").trim();        Assert.assertEquals(lastName, actual);    }    public void verify_dateOfBirth_of_customer(String dateOfBirth) {        String actual = $("//input[@id='DateOfBirth']").getAttribute("value").trim();        Assert.assertEquals(dateOfBirth, actual);    }    public void verify_company_of_customer(String companyName) {        String actual = $("//input[@id='Company']").getAttribute("value").trim();        Assert.assertEquals(companyName, actual);    }    public void verify_customer_role_of_customer(String customerRoles) {        String actual = $("//li[@class='k-button']").getText().trim();        Assert.assertEquals(customerRoles, actual);    }    public void verify_comment_of_customer(String adminComment) {        String actual = $("//textarea[@id='AdminComment']").getAttribute("value").trim();        Assert.assertEquals(adminComment, actual);    }    public void input_email_to_search_customer(String email) {        $("//input[@id='SearchEmail']").waitUntilVisible();        $("//input[@id='SearchEmail']").clear();        $("//input[@id='SearchEmail']").sendKeys(email);        logger.info("Inputted email to search: {}",email);    }    public void input_first_name_to_search_customer(String firstName) {        $("//input[@id='SearchFirstName']").waitUntilVisible();        $("//input[@id='SearchFirstName']").clear();        $("//input[@id='SearchFirstName']").sendKeys(firstName);        logger.info("Inputted firstName to search: {}",firstName);    }    public void input_last_name_to_search_customer(String lastName) {        $("//input[@id='SearchLastName']").waitUntilVisible();        $("//input[@id='SearchLastName']").clear();        $("//input[@id='SearchLastName']").sendKeys(lastName);        logger.info("Inputted lastName to search: {}",lastName);    }    public void input_company_name_to_search_customer(String companyName) {        $("//input[@id='SearchCompany']").waitUntilVisible();        $("//input[@id='SearchCompany']").clear();        $("//input[@id='SearchCompany']").sendKeys(companyName);        logger.info("Inputted companyName to search: {}",companyName);    }    public void input_customer_roles_to_search_customer(String customerRoles) {        $("//span[@title='delete']").waitUntilClickable();        $("//span[@title='delete']").click();        $("//div[@role='listbox']").waitUntilClickable();        $("//div[@role='listbox']").click();        $("//li[normalize-space()='"+customerRoles+"']").waitUntilClickable();        $("//li[normalize-space()='"+customerRoles+"']").click();        logger.info("Selected customer role to search: {}", customerRoles);    }    public void click_on_search_customer_button() {        $("//button[@id='search-customers']").waitUntilVisible();        $("//button[@id='search-customers']").click();        $("//div[@class='ajax-products-busy']").waitUntilNotVisible();        logger.info("CLicked button to search: {}","//button[@id='search-customers']");    }    public void verify_email_of_customer_after_searching(int i,String email) {        $("//tbody/tr["+i+"]//td[2]").waitUntilVisible();        String actual = $("//tbody/tr["+i+"]//td[2]").getText().trim();        Assert.assertEquals(email,actual);    }    public void verify_name_of_customer_after_searching(int i,String name) {        $("//tbody/tr["+i+"]//td[3]").waitUntilVisible();        String actual = $("//tbody/tr["+i+"]//td[3]").getText().trim();        Assert.assertEquals(name,actual);    }    public void verify_customer_roles_of_customer_after_searching(int i,String customerRoles) {        $("//tbody/tr["+i+"]//td[4]").waitUntilVisible();        String actual = $("//tbody/tr["+i+"]//td[4]").getText().trim();        Assert.assertEquals(customerRoles,actual);    }    public void verify_company_name_of_customer_after_searching(int i,String companyName) {        $("//tbody/tr["+i+"]//td[5]").waitUntilVisible();        String actual = $("//tbody/tr["+i+"]//td[5]").getText().trim();        Assert.assertEquals(companyName,actual);    }    public void click_edit_customer_button() {        $("//tbody/tr[1]//td[7]").waitUntilClickable();        $("//tbody/tr[1]//td[7]").click();        logger.info("Clicked on Edit button");    }    public void check_customer_info_displayed() {        if (getElement("//div[@class='card card-secondary card-outline collapsed-card' and @id='customer-info']") != null) {            logger.info("Customer info is Not displayed");            $("//div[@id='customer-info']").click();            $("//div[@class='ajax-products-busy']").waitUntilNotVisible();            logger.info("Clicked collapse icon >> Customer info is displayed");        } else if (getElement("//div[@class='card card-secondary card-outline']") != null) {            logger.info("Customer info is displayed!!!");        }    }    public void deleted_customer() {        $("//span[@id='customer-delete']").waitUntilClickable();        $("//span[@id='customer-delete']").click();        $("//button[normalize-space()='Delete']").waitUntilClickable();        $("//button[normalize-space()='Delete']").click();        logger.info("Clicked deleted current customer");    }}