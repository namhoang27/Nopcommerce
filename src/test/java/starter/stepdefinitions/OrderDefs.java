package starter.stepdefinitions;import io.cucumber.datatable.DataTable;import io.cucumber.java.en.And;import io.cucumber.java.en.Then;import net.thucydides.core.annotations.Steps;import org.junit.Assert;import starter.pages.OrderPage;import java.util.ArrayList;import java.util.List;import java.util.Map;public class OrderDefs {    @Steps    OrderPage orderPage;    @And("I add product to cart")    public void iAddProductToCart() {        orderPage.iAddProductToCart();    }    @And("I Edit Product {string} quantity is {string}")    public void iEditProductQuantityIs(String product, String quantity) {        orderPage.edit_product_quantity(product, quantity);    }    @And("I click {string} at Shopping cart")    public void iClickAtShoppingCart(String button) {        orderPage.click_button_at_ShoppingCart(button);    }    @Then("I verify the total price as below")    public void iVerifyTheTotalPriceAsBelow(DataTable dt) {        List<Map<String, String>> values = dt.asMaps(String.class, String.class);        for (Map<String, String> column : values) {            String subTotal = column.get("Sub-Total");            String total = column.get("Total");            orderPage.verifyValueOfSubTotal(subTotal);            orderPage.verifyValueOfTotal(total);        }    }    @And("I click on checkout agree with the terms of service")    public void iClickOnCheckoutAgreeWithTheTermsOfService() {        orderPage.tickCheckBoxAgree();    }    @Then("I input information at Checkout page as below")    public void iInputInformationAtCheckoutPageAsBelow(DataTable dt) {        List<Map<String, String>> values = dt.asMaps(String.class, String.class);        for (Map<String, String> column : values) {            String country = column.get("Country");            String state = column.get("State / province");            String city = column.get("City");            String address_1 = column.get("Address 1");            String zip_code = column.get("Zip / postal code");            String phone_number = column.get("Phone number");            String fax_number = column.get("Fax number");            orderPage.selectCountryOnCheckout(country);            orderPage.selectStateOnCheckout(state);            orderPage.inputCityOnCheckout(city);            orderPage.inputAddress1OnCheckout(address_1);            orderPage.inputZipCodeOnCheckout(zip_code);            orderPage.inputPhoneNumberOnCheckout(phone_number);            orderPage.inputFaxNumberOnCheckout(fax_number);        }    }    @Then("I click Continue button at step {string}")    public void iClickButtonAtStep(String step) {        orderPage.click_continue_button(step);    }    @And("I select {string} is {string}")    public void iSelectIs(String method, String option) {        orderPage.verify_stand_at_step(method);        orderPage.select_option_method(option);    }    @Then("I verify payment information")    public void iVerifyPaymentInformation() {        orderPage.verify_payment_information();    }    @And("I verify information of {string} displayed as below")    public void iVerifyInformationOfDisplayedAsBelow(String title, DataTable dt) {        List<Map<String, String>> values = dt.asMaps(String.class, String.class);        if(title.equals("Billing Address")){            for (Map<String, String> column : values) {                String name = column.get("Name");                String email = column.get("Email");                String phone = column.get("Phone");                String fax = column.get("Fax");                String company = column.get("Company");                String address1 = column.get("Address1");                String city = column.get("City");                String country = column.get("Country");                String payment = column.get("Payment");                orderPage.verify_name_of_billing_address(name);                orderPage.verify_email_of_billing_address(email);                orderPage.verify_phone_of_billing_address(phone);                orderPage.verify_fax_of_billing_address(fax);                orderPage.verify_company_of_billing_address(company);                orderPage.verify_address1_of_billing_address(address1);                orderPage.verify_city_of_billing_address(city);                orderPage.verify_country_of_billing_address(country);                orderPage.verify_payment_of_billing_address(payment);            }        }        if(title.equals("Shipping Address")){            for (Map<String, String> column : values) {                String name = column.get("Name");                String email = column.get("Email");                String phone = column.get("Phone");                String fax = column.get("Fax");                String company = column.get("Company");                String address1 = column.get("Address1");                String city = column.get("City");                String country = column.get("Country");                String shipping = column.get("Shipping");                orderPage.verify_name_of_shipping_address(name);                orderPage.verify_email_of_shipping_address(email);                orderPage.verify_phone_of_shipping_address(phone);                orderPage.verify_fax_of_shipping_address(fax);                orderPage.verify_company_of_shipping_address(company);                orderPage.verify_address1_of_shipping_address(address1);                orderPage.verify_city_of_shipping_address(city);                orderPage.verify_country_of_shipping_address(country);                orderPage.verify_shipping_of_shipping_address(shipping);            }        }    }    @Then("I should see success message order complete is displayed {string}")    public void iShouldSeeSuccessMessageOrderCompleteIsDisplayed(String message) {        orderPage.verify_message_order_complete(message);    }    @Then("I should see the list product display to check out as below")    public void iShouldSeeTheListProductDisplayToCheckOutAsBelow(DataTable dt) {        List<Map<String, String>> values = dt.asMaps(String.class, String.class);        for (int i = 0; i < values.size(); i++) {            String sku = values.get(i).get("SKU");            String product = values.get(i).get("Product(s)");            String price = values.get(i).get("Price");            String quantity = values.get(i).get("Qty.");            String total = values.get(i).get("Total");            orderPage.verifySKU(i + 1, sku);            orderPage.verifyProduct(i + 1, product);            orderPage.verifyPrice(i + 1, price);            orderPage.verifyQuantity(i + 1, quantity);            orderPage.verifyTotal(i + 1, total);        }    }}